=============
emacs and SQL
=============

The right way to work with a database
=====================================

We like emacs.  We like relational databases.  We are growing a beard.
Ok, emacs does everything, so it talks to databases.

sqlmode.el is built into emacs distro these days so::

  M-x sql-mysql

will prompt for the login details for a mysql server, host, username etc.

Then go to top buffer

 M-x sql-mode

this means the scratch buffer is now sql-mode enabled, it is a regular file from which you can run SQL commands.

 C-c C-c  send-paragraph

will send current para to the sql server (actually to the SQLi buffer stored in
variable sql-buffer, but this is rare to need to change)



word wrap

M-x toggle-truncate-lines

I prefer to set a key binding so that I can toggle this on and off more easily

::
 
  #in my .emacs file

  (global-set-key (kbd "<f7>") 'toggle-truncate-lines)

Then whenever I hit f7 I get the correct toggling behaviour


I could use a hook for sql-mode as well : TBD



Transactions
============

OK, one important thing.  You must know how to do transactions in a database.
Here is the uber simple example

Plan:

* do simple accounts transfer exmaple then show dirty reads and isolation level problems

1.8.5.3 - mysql handbook
12.3.6

* diff with ACID and just atomic
* transactions rare in app land
* example of transaction between two accounts
* diff between transactions and dirty read and locking issues


::

 CREATE TABLE account (
  accountID INT PRIMARY KEY AUTO_INCREMENT,
  customerID INT, 
  currentamount INT,
  
  );

 CREATE TABLE customer 
