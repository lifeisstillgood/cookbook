============================
Architects and Town Planners
============================

I've seen an advert for one of those
====================================

Adverts for *Technical Architect* are (or were, at least before the
credit crunch) rife in jobsites.  You could read them all day, and
still come away with no clearer idea what one was supposed to do.

And this is one of the reasons why the term "Enterprise Architect" is
held in rather lower esteem than perhaps it should be.  `Joel Spolsky
<http://www.joelonsoftware.com>`_ is a good example of the approach -
his essay *Architecture Astromauts* lays out the general view - that
there is a class of technical worker who spends all day coming up with
more and more "general" frameworks to explain and encompass all.

My generally negative view of this role can be boiled down to comparing 
them to a real-world architect.  An Enterprise Architect is usually compared to a building architect, someone supposed to be at the top
of the power hierarchy - holding the clients hand (while he signs the cheques) and imposing his/her vision of the final product.

Sounds good, doesn't it.  Unfortunately, a normal architect works for
one building.  One building generally can have a vision *imposed*.
Pretty much every enterprise has such an agglomeration of different
systems that it cannot be thought of as a single building - perhaps a
town, perhaps an eco-system.  Try imposing your vision on a jungle.


So if we *architect* is no longer a viable term, what is?  
*Head Gardener* might be a good term, *town planner* a bit more
official, *chief behavioural economist* maybe, and *artificial evolutionist* is probably my favourite.


I think it is impossible to escape the idea that in any organisation of a decent size the organisation is a loose federation of groups with varying degrees of autonomy.  In fact in small organisations, the more robust and flexible systems are designed that way [#]_.  So if an architect is not really looking after one building but a town-full, what principles can we look at to help.

The economist point of view
---------------------------
That is economist as in Keynes, not the magazine.  Keynes would describe a Market as the interaction of autonomous agents, guided by a information mechanism such a market price.  And we can see that different programs interact with each other, messily or not.  Finding the boundaries between buildings can occassionally be hard, between systems much harder, 

There is not a pricing mechanism in most computer interactions, or is there. 
Speed of response is often a pricing signal - routing another.

Inside each system command and control is the major player.  Between systems, it is automous interaction.

One major thing to take awy is the concept of the enterprise messaging bus.



- markets and autonomous agents
- inside agent is command and control
- market itself is, well market forces.
- knowing where one stops and other starts is vital



Simplicity - simple enough to be held in one persons head.
If not then need a different approach

Town Planning
-------------
Ref gradyBooch article

Architecture v town planning

TOwn planning is not command and control - but focuses on principles of defined spaces, interaction, constraining types of growth

How to persuae people that they are not that special. That a special case is rarely a good enough explanation for doing it differently.

failure of NftIP - lorenzo project, navy comparison 

EA is like KGB agent who asked british ambassador "Who is the person responsible for the delivery of bread to lOndon"
If you are asking that question, you need to use market forces not a better methodology



Boeing architects - yes, complex application (a Boeing 747) but simple function - to fly, safely.  GOod architects are invaluable here - but first the owner of the house, must make clear their strategy. 
And it is accurate to describe each boein product as havign its own organisation - the fighter work is a different company just owned byu boeing.

the architecture astronauts
- when get to that point its no longer the job of ea - no architect can resolve 
"build me a house my wife would like, with enough room for offices of 100 people, and of course the loading docks and factory floor


extracting the essentials
- at what point does command and control stop, where is the efficency line for autonomus units acting in a market

if we are happy with autonomus units then allow them to be autinoums - stop trying to impose architectural decisons on AUs

use regulation, and market forces.  THat is for organisations of certain size and complexity we do not want architects, but Technical Regulators (watchdogs is current UK term)

town planning comes into its own

Bibliography
------------

Simple Architectures for Complex Enterprises
Roger Sessions 978-0-7356-2578-5

example that stood out - using purchasing clout to simplify purchase ordering by requiring suppliers to use same standard (or by finding an industry std)
well, yes, but that is hardly "architecture" is it.

weaknesses - his premises (stated p.83) are that complexity of a system is related to number of (significant) decision paths a system can take.
Simplicity, and the use of "partitioning" to decide where to cut.
Its a bit like every other architecture book / article - a clarion call to abstraction.

www.economist.com/science/displaystory.cfm?story_id=12971028
People Procrastinate when asked to think in the abstract - that when asked to think in abstract students procrastinated in their replys to the researchers.
From this reasonable statement flows the generally poor regard in which "Enterprise Architects" are held (that and every TOm DIck and Harry has had some job title inflation)
It works from both ends, but most Architectures are abstract by default, and 


An architecture is an attempt to simplify the real world sufficently to be able to draw out and emphasise what is essential.  It may be the elegant lines that mix inside and outside of a building created around its veranda, it may be the clear directions and flow of an airport that force you through.  But the essential function of an organisation

if an organisation does more than its architecture can simply represent, perhaps it is time to consider "partitioning" that organisaiton - basically splitting it up into two different organisaitons with some shared work.



Town planning is herding cats.  What is and more importantly what is not allowed in functionality of autonomous units, and how those unts are and are not allowed to interact.


Town planning is often about spotting very similar autonomous units and shouting "replace one with functions of both"
TOwn planning is helped enourmously by market forces, where the people living in town will literally vote with their feet which building or route throgh the town they prefer.  Forcing roads through will make a difference but if everyones prefered destinaiton is still down a one way street they will go there.



Very nice article = basically business logic programming does suck, you cannot 
framework your way out of it

http://thedailywtf.com/Articles/Programming-Sucks!-Or-At-Least,-It-Ought-To-.aspx

some nice quotes
http://97-things.near-time.net/wiki/97-things-every-software-architect-should-know-the-book

esp

Chances are your biggest problem isn't technical 
One line of working code is worth 500 of specification 
Skyscrapers aren't scalable 

and everything is a trade off


quantify
- fast is not a requirement, nor is responsive or extensible
- will deliver xx in xx time under normal load - is


.. [#] The Unix philosophy (ref) can be summed up as "Do one thing well, expect to be chained together with other programs, and ..."