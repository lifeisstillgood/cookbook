Todo
====
Enable a form of production where there can be any number of depth folders - so I can rganise more easily.
start an erlang part -
 - things needed to be competant in a language 
   - its idioms
   - debugging procedure
   - unit testing
   - patches
   
Why erlang
- of the main language types its only one I do not have some fluency with (OOP, declarative, procedural, functional)






Structure
=========







Starting theme - we are entering an era characterised by industrial processes transforming into more traditional knowledge management - industrial knoweldge management - where heavy lifting will still be done by machines.  More knowledge can be processed than before in one brain

This demands a transformation of our workplace - and the agents of change will be those in charge of organisations and conversant with the technology - IT managers


* What is an IT manager *Today*
  names, must be able to cook
  
* Just like scribes
  "scrpang own vellum"
 
* Other skills
  project mgmt and release management
  town planning, right and wrong
  story collecting and telling, 
  managing upwards and outwards  


* real and virtual worlds



Transformational IT Manager - *tomorrow*

Heading to lawyer

WOrkplace environment
- look at temple Inns - how do they handle knowledge work?

How we plan - forwards or backwards
Transparency
Scalability
open source is transparent - and if our society will be run by code as it is currently run by written word, we shall need to be able to read the source, and then have release management processes for our own society.

scalability - prarallel algorithms and data parallel work



