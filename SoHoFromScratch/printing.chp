=======================
Using CUPS for Printing
=======================


CUPS
====
CUPS (Common Unix Printing System) is a 'printing system' that is a complete replacement for the older Unix printing tools.  It acts as a print server, able to accept print 'jobs' from local or remote computers, process from the incoming format into one suitable for the printer, and forward on to the appropriate printer.

CUPS is significantly simpler to administer than the older lpd-style tools, and is rapidly becoming the standard print server on Unix systems.  It has strong industry support from Apple Inc. which recently purchased the developer company Easy Software Products.  Apple have stated they intend CUPS to continue to be released under Open Source License.




By the end of this chapter you should be able to 

- Install and configure CUPS
- Add a network printer to CUPS and print to it
- Implement a simple policy for a printer
- Keep and view page logs
- Extend CUPS using python scripts

Background
-------------
CUPs is most easily understood if the problems it evolved to solve are considered first.  They can be broadly categorised and simplified as follows


The PostScript Problem
----------------------
Almost every program that 'prints' can and does output a PostScript file.  However a fairly limited number of printers on the market can accept and print a plain PostScript file (they are known as PostScript printers).  Simply put one needs to pay a premium for a PostScript printer.  This is due to a combination of market segmentation by manufacturers and genuine lack of processing power on low-end printers. This meant that workstations needed to have extra software and administration overhead just to print on cheaper hardware.

Filters were written to convert from PostScript to raster but accessing even simple printer native commands like duplexing demanded extra configuration.

configuration problem
-------------------
Printer manufacturers produce PostScript Printer Description (PPD) files.  These describe the capabilities of their PostScript Printers (e.g. the PPD will state the printer supports PostScript Level 2, it is colour, it has duplex capabilities).
Importantly PPD files can contain instructions for configuring and accessing functions native to the printer (such as commands for duplexing or stapling).

CUPS has extended the concept to use CUPS-PPD files, which describe the capabilities and commands necessary to use them even for non-PostScript printers.

If you can find a PPD written specifically for your printer CUPS will configure itself for you.  There are thousands of PPDs in open repositories.

foomatic
By taking a PPD and a Postscript file, the GNU foomatic project is able to work out the (minimal) printer native commands needed to print the postscript file onto a printer that the PPD file represents - it is in short a on the fly device driver builder for printers.  It can get almost all printers printing - but at minimal extra functionality.  It is recommended you use a manufacturer PPD first if available (try cups.org/ppd.php) then get a more generic PPD from linuxprinting.org/printer_list.cgi


The Network Problem
-------------------
A centralised print *spool* will reduce the need to put spooling and other functions on individual workstations, however authentication and authorisation support has always been poor for unix printing.  Internet Printing Protocol (IPP) is a standards-based protocal that uses HTTP, so any HTTP aware application can send a file to a server and authenticate using normal methods mosodern print servers and huge numbers of clients support IPP.


Now all the pieces are in place - it is possible to build a print server that can accept a standard input file (ie Postscript) eliminating the need for the printing program to 'know' what printer it is sending to, it is possible to attach almost any printer to the print server simply by providing a standards-based PPD file, which tells the print server how to access all the capabilities of the printer and the server itself can do the spooling and accounting.



Installation and setup
----------------------
Installation of CUPS can be run from ports easily as follows::

  cd /usr/ports/print/cups
  make config-recursive
  #I recommend you choose 'With Python support', if you wish to 'extend' the CGI capabilities.
  make install clean



This will make the current host a 'print server'.  Run /usr/local/sbin/cupsd (as root) on command line to start the server.  It can automatically start on boot with the following ::


  echo cupsd_enable="YES" >> /etc/rc.conf



The  cupsd.conf  file  configures  the CUPS scheduler, cupsd(8).  It is
       normally located in the /usr/local/etc/cups directory.



Adding a network-printer
------------------------
Whenever a printer is "connected" to a CUPS server, CUPS creates a queue and a device for that printer.  The device might be a USB port, a network socket and can be viewed using lpinfo -v.  lpadmin configures those queues and devices.

I have a new printer to setup, a Brother HL-5270DN, an ethernet capable B&W laser suitable for SOHO environments.  

FIrstly I visit www.linuxprinting.org to find a suitable PPD file for my printer.  http://www.linuxprinting.org/show_printer.cgi gives me a link to a PPD file supplied by the manufacturer and says it works 'perfectly'.

Now I need to create a device, a queue and configure them with the PPD device.

I have already configured my printer manually with IP address of 10.0.1.1

::
  
  /usr/sbin/lpadmin -p <name_of_queue> -E -v <device_uri> -P <ppd file>

::
 
 /usr/sbin/lpadmin -p bwbrother -E -v socket://10.0.1.1 -P /tmp/BR5270_2_GPL.ppd


Now I can visit http://localhost:631, and view the *printers* tab, and the printer is available - a quick test page and all is well.

It is also possible to add a printer through the web interface, but the essentials are still necessary - a manufacturer PPD file, the name of a queue and a device uri


getting device uri

lpinfo -v

Installing a USB printer
------------------------
Diagnosis of USB problems are outside the scope of this article, however 

lpinfo -v 

will give you a output of form 

xxx

if cups can find and identify. if so proceed as above but using the device uri shown instead of socket based uri.



ppds stored at /usr/local/share/cups/model


There is a list, maintained by volunteers of PPD files and the printers they work with (and how well they work) at
http://www.linuxprinting.org/printer_list.cgi

Others exist but this is probably the most complete resource available.  It is highly recommended you check here *before* purchasing your printers.

so a PPD file looks like ::

    *PPD-Adobe: "4.3"
        ...
    *%	Copyright(C) 2005 Brother Industries, Ltd.
    *%	"Brother HL-5270DN BR-Script3"
   ...
    *FormatVersion: "4.3"
    *FileVersion: "1.03"
    *LanguageEncoding: ISOLatin1
    *LanguageVersion: English
    *Manufacturer: "Brother"
    ...


Printer name
Environment variable

Auto-discovery
xxx
Where is the printer
Xxx


USB printers
xxx


Using command line printing
---------------------------
This should work

  $ lpr -P Brother_HL_5270DN mytestfile.txt

however there may be problems. The most common is that the old non CUPS printing software 
is also named lp or lpr. and that they sit higher up $PATH than the stuff CUPS installs

  $ /usr/local/bin/lpr -P Brother_HL_5270DN resolv.conf

if that works you just have a path problem.  It can be fixed on install of CUPS by XXX
Or you can move /usr/local/bin *before* /usr/bin in your $PATH [1]_
Or force a replace of the old with a softlink to the new

  $ ln -s /usr/local/bin/lpr /usr/bin/lpr



/usr/local/bin/lpr -P brother3 xorg.conf.new

setenv PRINTER brother3



So we are now able to print to a printer from our local machine


Sharing the printer
-------------------


Controlling policies
--------------------
/usr/local/etc/cups/cupsd.conf


 



Printing from Windows
---------------------
CUPS acts then as a plain postscript printer to the postscript driver / filter.
Access to printer functions is limited.



..... [1] From http://www.freebsddiary.org/cups.php
 



What is IPP?
http://www.networkworld.com/news/2000/0710ipp.html

accounting
http://localhost:631/help/accounting.html?TOPIC=Getting+Started&QUERY=

http://www.cups.org/documentation.php/ref-cupsd-conf.html
search for pagelogformat

cgi extensions
http://localhost:631/help/cgi.html?TOPIC=Getting+Started&QUERY=

view own config
http://localhost:631/help/standard.html?TOPIC=Getting+Started&QUERY=


foomatic
http://en.wikipedia.org/wiki/Foomatic

installing
http://www.linuxprinting.org/kpfeifle/LinuxKongress2002/Tutorial/II.Foomatic-User/II.tutorial-handout-foomatic-user.html

Open letter from 2000
http://www.linuxfoundation.org/en/OpenPrinting/Database/LPDMustDie

http://www.openprinting.org/kpfeifle/LinuxKongress2002/Tutorial/VII.cups-help/VII.cups-help.html


http://www.cups.org/documentation.php/overview.html
http://www.linuxfoundation.org/en/OpenPrinting/Database/CUPSDocumentation
