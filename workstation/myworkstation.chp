==============
My workstation
==============

Trying to cover everything - its quite a tall order.


1. xterm

I want to have unicode on my command line. I just do. 
so it's _x11/rxvt-unicode_.  Then I adjust my .Xresources file as follows ::

    urxvt*background: black
    urxvt*foreground: green
    urxvt*pointerColor: green
    urxvt*pointerColorBackground: green
    urxvt*scrollBar: true
    urxvt*scrollKey: true
    urxvt*saveLines: 1000
    urxvt*loginShell: true
    urxvt*font: -adobe-courier-medium-r-*-*-18-*-*-*-*-*-iso8859-1

We can then reset the X resource settings with ::

    $ xrdb ~/.Xresources

And also remember all the above settings and many more can be found in man xterm.  P.S. Do be careful how you spell urxvt.  I put uxrvt into my .Xresources file and lost *hours* trying to figure out what was wrong with my system.


More on urxvt
-------------

add ::

 urxvt.perl-ext-common:default,tabbed

to .Xresources.  Then you can use the tabbing feature in urxvt, ::

 shift-cursor down to create tab
 shift-cursorleft/right to navigate tabs



Unicode
-------

* Entering UTF8 characters

The easy way - say I want a+accent (á) or (à).  I can use pre-defined 
control characters - so the simple version is ::

  C-x 8 ` a
  C-x 8 ' a

  (That's C-x 8 (for utf8) and backtick or single quote followed by a)

To see all the options C-x 8 C-h.

Now that is fine as long as someone has pre defined them.  For the rest 
we enter by codepoint.  
we can adjust our inoput method to latin-9-prefix if we type a lot in 
these languages (M-x set-input-method) allowing us to not put C-x 8 first.
::

  M-x ucs-insert (also maps to C-x 8 RET)

  this then asks what char to insert based on hex value or on name.
  By typing in part of name and then tab you can get a list of all UNICODE name
  that match that name.



  

Now, I test in terminal

I see horror.
I test in urxvt - I see an attempt at least but the font is not got enough proper display characters.  So I need to use a different font (I have adobe courier above so lets look around)



